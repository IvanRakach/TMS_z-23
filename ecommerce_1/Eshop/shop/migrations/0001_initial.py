# Generated by Django 3.2.16 on 2022-10-30 18:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MotorOilBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд моторного масла',
                'verbose_name_plural': 'Бренды моторных масел',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OilFilterBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд масляного фильтра',
                'verbose_name_plural': 'Бренды масляных фильтров',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OilFilterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Тип масляного фильтра',
                'verbose_name_plural': 'Типы масляных фильтров',
                'ordering': ('type',),
            },
        ),
        migrations.CreateModel(
            name='PhoneBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд телефона',
                'verbose_name_plural': 'Бренды телефонов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TabletBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд планшета',
                'verbose_name_plural': 'Бренды планшетов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tablet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tablet_model', models.CharField(db_index=True, max_length=200)),
                ('tablet_slug', models.SlugField(max_length=200)),
                ('tablet_release_date', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('tablet_operating_system', models.CharField(db_index=True, max_length=200, verbose_name='Операционная система')),
                ('tablet_operating_system_version', models.CharField(db_index=True, max_length=200, verbose_name='Версия операционной системы')),
                ('tablet_dual_sim_support', models.CharField(db_index=True, max_length=200, verbose_name='Поддержка двух SIM-карт')),
                ('tablet_description', models.TextField(blank=True, null=True)),
                ('tablet_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tablet_image_1', models.ImageField(blank=True, null=True, upload_to='tablets/%Y/%m/%d', verbose_name='Фотография 1')),
                ('tablet_image_2', models.ImageField(blank=True, null=True, upload_to='tablets/%Y/%m/%d', verbose_name='Фотография 2')),
                ('tablet_image_3', models.ImageField(blank=True, null=True, upload_to='tablets/%Y/%m/%d', verbose_name='Фотография 3')),
                ('tablet_image_4', models.ImageField(blank=True, null=True, upload_to='tablets/%Y/%m/%d', verbose_name='Фотография 4')),
                ('tablet_image_5', models.ImageField(blank=True, null=True, upload_to='tablets/%Y/%m/%d', verbose_name='Фотография 5')),
                ('tablet_video_youtube', models.CharField(blank=True, max_length=255, null=True, verbose_name='Видео (ссылка на YouTube)')),
                ('tablet_reserve', models.PositiveIntegerField()),
                ('tablet_available', models.BooleanField(default=True)),
                ('tablet_time_created', models.DateTimeField(auto_now_add=True)),
                ('tablet_time_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tablets', to='shop.goodcategory')),
                ('tablet_brand', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.PROTECT, to='shop.tabletbrand', verbose_name='Бренд планшета')),
            ],
            options={
                'ordering': ('tablet_model',),
                'index_together': {('id', 'tablet_slug')},
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_model', models.CharField(db_index=True, max_length=200)),
                ('phone_slug', models.SlugField(max_length=200)),
                ('phone_release_date', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('phone_operating_system', models.CharField(db_index=True, max_length=200, verbose_name='Операционная система')),
                ('phone_operating_system_version', models.CharField(db_index=True, max_length=200, verbose_name='Версия операционной системы')),
                ('phone_communication_standards_support', models.CharField(db_index=True, max_length=200, verbose_name='Поддержка стандартов связи')),
                ('phone_description', models.TextField(blank=True, null=True)),
                ('phone_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('phone_image_1', models.ImageField(blank=True, null=True, upload_to='phones/%Y/%m/%d', verbose_name='Фотография 1')),
                ('phone_image_2', models.ImageField(blank=True, null=True, upload_to='phones/%Y/%m/%d', verbose_name='Фотография 2')),
                ('phone_image_3', models.ImageField(blank=True, null=True, upload_to='phones/%Y/%m/%d', verbose_name='Фотография 3')),
                ('phone_image_4', models.ImageField(blank=True, null=True, upload_to='phones/%Y/%m/%d', verbose_name='Фотография 4')),
                ('phone_image_5', models.ImageField(blank=True, null=True, upload_to='phones/%Y/%m/%d', verbose_name='Фотография 5')),
                ('phone_video_youtube', models.CharField(blank=True, max_length=255, null=True, verbose_name='Видео (ссылка на YouTube)')),
                ('phone_reserve', models.PositiveIntegerField()),
                ('phone_available', models.BooleanField(default=True)),
                ('phone_time_created', models.DateTimeField(auto_now_add=True)),
                ('phone_time_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='phones', to='shop.goodcategory')),
                ('phone_brand', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.PROTECT, to='shop.phonebrand', verbose_name='Бренд телефона')),
            ],
            options={
                'ordering': ('phone_model',),
                'index_together': {('id', 'phone_slug')},
            },
        ),
        migrations.CreateModel(
            name='OilFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oil_filter_slug', models.SlugField(max_length=200)),
                ('oil_filter_external_diameter', models.CharField(db_index=True, max_length=200)),
                ('oil_filter_height', models.CharField(db_index=True, max_length=200)),
                ('oil_filter_thread', models.CharField(db_index=True, max_length=200)),
                ('oil_filter_suitable_for_cars', models.CharField(db_index=True, max_length=200)),
                ('oil_filter_description', models.TextField(blank=True, null=True)),
                ('oil_filter_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('oil_filter_image_1', models.ImageField(blank=True, null=True, upload_to='oil_filters/%Y/%m/%d', verbose_name='Фотография 1')),
                ('oil_filter_reserve', models.PositiveIntegerField()),
                ('oil_filter_available', models.BooleanField(default=True)),
                ('oil_filter_time_created', models.DateTimeField(auto_now_add=True)),
                ('oil_filter_time_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='oil_filters', to='shop.goodcategory')),
                ('oil_filter_brand', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.PROTECT, to='shop.oilfilterbrand', verbose_name='Бренд масляного фильтра')),
                ('oil_filter_type', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.PROTECT, to='shop.oilfiltertype', verbose_name='Тип масляного фильтра')),
            ],
            options={
                'ordering': ('oil_filter_brand',),
                'index_together': {('id', 'oil_filter_slug')},
            },
        ),
        migrations.CreateModel(
            name='MotorOil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_oil_viscosity', models.CharField(db_index=True, max_length=200)),
                ('m_oil_slug', models.SlugField(max_length=200)),
                ('m_oil_volume', models.PositiveIntegerField()),
                ('m_oil_description', models.TextField(blank=True, null=True)),
                ('m_oil_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('m_oil_image_1', models.ImageField(blank=True, null=True, upload_to='motor_oils/%Y/%m/%d', verbose_name='Фотография 1')),
                ('m_oil_reserve', models.PositiveIntegerField()),
                ('m_oil_available', models.BooleanField(default=True)),
                ('m_oil_time_created', models.DateTimeField(auto_now_add=True)),
                ('m_oil_time_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='motor_oils', to='shop.goodcategory')),
                ('m_oil_brand', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.PROTECT, to='shop.motoroilbrand', verbose_name='Бренд моторного масла')),
            ],
            options={
                'ordering': ('m_oil_brand',),
                'index_together': {('id', 'm_oil_slug')},
            },
        ),
    ]
